---
const { username } = Astro.props;
---

<div class="bg-white dark:bg-gray-900 rounded-lg shadow-md p-6" id="contribution-chart">
  <!-- Loading State -->
  <div id="loading-state" class="py-6">
    <!-- Header Skeleton -->
    <div class="flex items-center justify-between mb-6">
      <div class="flex items-center space-x-4">
        <div class="w-12 h-12 rounded-full bg-gray-300 dark:bg-gray-700 skeleton-shimmer"></div>
        <div>
          <div class="h-5 bg-gray-300 dark:bg-gray-700 rounded w-32 mb-2 skeleton-shimmer"></div>
          <div class="h-4 bg-gray-300 dark:bg-gray-700 rounded w-24 skeleton-shimmer"></div>
        </div>
      </div>
      <div class="hidden md:flex items-center space-x-6">
        <div class="text-center">
          <div class="h-8 bg-gray-300 dark:bg-gray-700 rounded w-12 mx-auto mb-1 skeleton-shimmer"></div>
          <div class="h-3 bg-gray-300 dark:bg-gray-700 rounded w-16 skeleton-shimmer"></div>
        </div>
        <div class="text-center">
          <div class="h-8 bg-gray-300 dark:bg-gray-700 rounded w-12 mx-auto mb-1 skeleton-shimmer"></div>
          <div class="h-3 bg-gray-300 dark:bg-gray-700 rounded w-16 skeleton-shimmer"></div>
        </div>
        <div class="text-center">
          <div class="h-8 bg-gray-300 dark:bg-gray-700 rounded w-12 mx-auto mb-1 skeleton-shimmer"></div>
          <div class="h-3 bg-gray-300 dark:bg-gray-700 rounded w-20 skeleton-shimmer"></div>
        </div>
      </div>
    </div>
    
    <!-- Calendar Skeleton -->
    <div class="mb-6">
      <div class="h-6 bg-gray-300 dark:bg-gray-700 rounded w-64 mb-4 skeleton-shimmer"></div>
      <div class="overflow-x-auto">
        <div class="inline-block min-w-full">
          <!-- Month labels skeleton -->
          <div class="flex mb-2">
            <div class="w-8"></div>
            <div class="h-3 bg-gray-300 dark:bg-gray-700 rounded w-24 mr-2 skeleton-shimmer"></div>
            <div class="h-3 bg-gray-300 dark:bg-gray-700 rounded w-24 mr-2 skeleton-shimmer"></div>
            <div class="h-3 bg-gray-300 dark:bg-gray-700 rounded w-24 skeleton-shimmer"></div>
          </div>
          <!-- Grid skeleton -->
          <div class="flex">
            <div class="w-8 mr-2"></div>
            <div class="grid grid-flow-col gap-1" style="grid-template-rows: repeat(7, minmax(0, 1fr)); grid-auto-columns: 12px;">
              <!-- Generate 91 skeleton cells (13 weeks) -->
              <div class="w-3 h-3 bg-gray-300 dark:bg-gray-700 rounded-sm skeleton-shimmer"></div>
              <div class="w-3 h-3 bg-gray-300 dark:bg-gray-700 rounded-sm skeleton-shimmer" style="animation-delay: 0.05s"></div>
              <div class="w-3 h-3 bg-gray-300 dark:bg-gray-700 rounded-sm skeleton-shimmer" style="animation-delay: 0.1s"></div>
              <div class="w-3 h-3 bg-gray-300 dark:bg-gray-700 rounded-sm skeleton-shimmer" style="animation-delay: 0.15s"></div>
              <div class="w-3 h-3 bg-gray-300 dark:bg-gray-700 rounded-sm skeleton-shimmer" style="animation-delay: 0.2s"></div>
              <div class="w-3 h-3 bg-gray-300 dark:bg-gray-700 rounded-sm skeleton-shimmer" style="animation-delay: 0.25s"></div>
              <div class="w-3 h-3 bg-gray-300 dark:bg-gray-700 rounded-sm skeleton-shimmer" style="animation-delay: 0.3s"></div>
              <!-- Repeat pattern for visual effect -->
              <div class="w-3 h-3 bg-gray-300 dark:bg-gray-700 rounded-sm skeleton-shimmer"></div>
              <div class="w-3 h-3 bg-gray-300 dark:bg-gray-700 rounded-sm skeleton-shimmer" style="animation-delay: 0.05s"></div>
              <div class="w-3 h-3 bg-gray-300 dark:bg-gray-700 rounded-sm skeleton-shimmer" style="animation-delay: 0.1s"></div>
              <div class="w-3 h-3 bg-gray-300 dark:bg-gray-700 rounded-sm skeleton-shimmer" style="animation-delay: 0.15s"></div>
              <div class="w-3 h-3 bg-gray-300 dark:bg-gray-700 rounded-sm skeleton-shimmer" style="animation-delay: 0.2s"></div>
              <div class="w-3 h-3 bg-gray-300 dark:bg-gray-700 rounded-sm skeleton-shimmer" style="animation-delay: 0.25s"></div>
              <div class="w-3 h-3 bg-gray-300 dark:bg-gray-700 rounded-sm skeleton-shimmer" style="animation-delay: 0.3s"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Repositories Skeleton -->
    <div class="mt-6 pt-6 border-t border-gray-200 dark:border-gray-700">
      <div class="h-5 bg-gray-300 dark:bg-gray-700 rounded w-40 mb-4 skeleton-shimmer"></div>
      <div class="space-y-2">
        <div class="flex items-center justify-between p-3 bg-gray-100 dark:bg-gray-800 rounded-lg skeleton-shimmer">
          <div class="flex items-center space-x-3">
            <div class="w-5 h-5 bg-gray-300 dark:bg-gray-700 rounded"></div>
            <div class="h-4 bg-gray-300 dark:bg-gray-700 rounded w-32"></div>
          </div>
          <div class="h-4 bg-gray-300 dark:bg-gray-700 rounded w-12"></div>
        </div>
        <div class="flex items-center justify-between p-3 bg-gray-100 dark:bg-gray-800 rounded-lg skeleton-shimmer" style="animation-delay: 0.1s">
          <div class="flex items-center space-x-3">
            <div class="w-5 h-5 bg-gray-300 dark:bg-gray-700 rounded"></div>
            <div class="h-4 bg-gray-300 dark:bg-gray-700 rounded w-40"></div>
          </div>
          <div class="h-4 bg-gray-300 dark:bg-gray-700 rounded w-12"></div>
        </div>
      </div>
    </div>
  </div>

  <!-- Error State -->
  <div id="error-state" class="hidden text-center py-8 text-red-600">
    <svg class="w-12 h-12 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
    </svg>
    <h4 class="text-lg font-semibold mb-2">Unable to load contributions</h4>
    <p class="text-sm" id="error-message">Please try again later</p>
  </div>

  <!-- Content -->
  <div id="contribution-content" class="hidden">
    <!-- Header with user info -->
    <div class="flex items-center justify-between mb-6">
      <div class="flex items-center space-x-4">
        <img id="user-avatar" src="" alt="User avatar" class="w-12 h-12 rounded-full border-2 border-green-500">
        <div>
          <h3 class="text-xl font-bold text-gray-900 dark:text-white" id="user-display-name"></h3>
          <a id="user-github-link" href="" target="_blank" class="text-sm text-green-600 hover:text-green-700 dark:text-green-400 flex items-center">
            <span id="user-username"></span>
            <svg class="w-4 h-4 ml-1" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
            </svg>
          </a>
        </div>
      </div>
      
      <!-- Stats Overview -->
      <div class="hidden md:flex items-center space-x-6 text-sm">
        <div class="text-center">
          <div class="text-2xl font-bold text-green-600 dark:text-green-400" id="total-prs">0</div>
          <div class="text-gray-500 dark:text-gray-400">Total PRs</div>
        </div>
        <div class="text-center">
          <div class="text-2xl font-bold text-blue-600 dark:text-blue-400" id="merged-prs">0</div>
          <div class="text-gray-500 dark:text-gray-400">Merged</div>
        </div>
        <div class="text-center">
          <div class="text-2xl font-bold text-yellow-600 dark:text-yellow-400" id="current-streak">0</div>
          <div class="text-gray-500 dark:text-gray-400">Day Streak</div>
        </div>
      </div>
    </div>

    <!-- Contribution Calendar -->
    <div class="mb-6">
      <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
        Hacktoberfest 2025 Contributions
        <span class="text-sm font-normal text-gray-500 dark:text-gray-400 ml-2">(Oct 1 - Dec 31)</span>
      </h4>
      
      <div class="overflow-x-auto">
        <div class="inline-block min-w-full">
          <!-- Month labels -->
          <div class="flex mb-2 text-xs font-medium text-gray-600 dark:text-gray-400">
            <div class="w-8"></div>
            <div style="width: 124px;">October</div>
            <div style="width: 124px;">November</div>
            <div style="width: 124px;">December</div>
          </div>
          
          <!-- Day labels and grid -->
          <div class="flex">
            <!-- Day of week labels -->
            <div class="flex flex-col text-xs text-gray-500 dark:text-gray-400 mr-2">
              <div class="h-3"></div>
              <div class="h-3 leading-3">Mon</div>
              <div class="h-3"></div>
              <div class="h-3 leading-3">Wed</div>
              <div class="h-3"></div>
              <div class="h-3 leading-3">Fri</div>
              <div class="h-3"></div>
            </div>
            
            <!-- Contribution grid -->
            <div id="contribution-grid" class="grid grid-flow-col gap-1" style="grid-template-rows: repeat(7, minmax(0, 1fr));">
              <!-- Will be populated by JavaScript -->
            </div>
          </div>
        </div>
      </div>
      
      <!-- Legend -->
      <div class="flex items-center justify-end mt-4 text-xs text-gray-500 dark:text-gray-400">
        <span class="mr-2">Less</span>
        <div class="flex items-center space-x-1">
          <div class="w-3 h-3 bg-gray-100 dark:bg-gray-800 border border-gray-300 dark:border-gray-700 rounded-sm" title="No contributions"></div>
          <div class="w-3 h-3 bg-green-200 dark:bg-green-900 border border-green-300 dark:border-green-800 rounded-sm" title="1-3 contributions"></div>
          <div class="w-3 h-3 bg-green-400 dark:bg-green-700 border border-green-500 dark:border-green-600 rounded-sm" title="4-7 contributions"></div>
          <div class="w-3 h-3 bg-green-600 dark:bg-green-500 border border-green-700 dark:border-green-400 rounded-sm" title="8+ contributions"></div>
        </div>
        <span class="ml-2">More</span>
      </div>
    </div>

    <!-- Top Repositories -->
    <div id="top-repos-section" class="mt-6 pt-6 border-t border-gray-200 dark:border-gray-700">
      <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Top Repositories</h4>
      <div id="top-repos-list" class="space-y-2">
        <!-- Will be populated by JavaScript -->
      </div>
    </div>
  </div>
</div>

<script define:vars={{ username }}>
  const API_BASE = import.meta.env.PUBLIC_API_BASE_URL || 'http://localhost:4000';
  
  // Get color class based on contribution count
  function getColorClass(count) {
    if (count === 0) return 'bg-gray-100 dark:bg-gray-800 border-gray-300 dark:border-gray-700';
    if (count <= 3) return 'bg-green-200 dark:bg-green-900 border-green-300 dark:border-green-800';
    if (count <= 7) return 'bg-green-400 dark:bg-green-700 border-green-500 dark:border-green-600';
    return 'bg-green-600 dark:bg-green-500 border-green-700 dark:border-green-400';
  }

  // Fetch and display contributions
  async function loadContributions() {
    const loadingState = document.getElementById('loading-state');
    const errorState = document.getElementById('error-state');
    const contentDiv = document.getElementById('contribution-content');
    
    try {
      const response = await fetch(`${API_BASE}/api/user/contributions/${username}`);
      
      if (!response.ok) {
        throw new Error('Failed to fetch contributions');
      }
      
      const data = await response.json();
      
      // Hide loading, show content
      loadingState?.classList.add('hidden');
      contentDiv?.classList.remove('hidden');
      
      // Populate user info
      const avatar = document.getElementById('user-avatar');
      const displayName = document.getElementById('user-display-name');
      const usernameEl = document.getElementById('user-username');
      const githubLink = document.getElementById('user-github-link');
      
      if (avatar) avatar.src = data.user.avatar_url;
      if (displayName) displayName.textContent = data.user.display_name || data.user.username;
      if (usernameEl) usernameEl.textContent = `@${data.user.username}`;
      if (githubLink) githubLink.href = data.user.profile_url;
      
      // Populate stats
      const totalPRs = document.getElementById('total-prs');
      const mergedPRs = document.getElementById('merged-prs');
      const currentStreak = document.getElementById('current-streak');
      
      if (totalPRs) totalPRs.textContent = data.stats.totalPRs;
      if (mergedPRs) mergedPRs.textContent = data.stats.totalMergedPRs;
      if (currentStreak) currentStreak.textContent = data.stats.currentStreak;
      
      // Populate contribution grid
      const grid = document.getElementById('contribution-grid');
      if (grid && data.contributionHistory) {
        grid.innerHTML = '';
        
        data.contributionHistory.forEach(day => {
          const cell = document.createElement('div');
          cell.className = `w-3 h-3 rounded-sm border ${getColorClass(day.count)} transition-all hover:scale-125 cursor-pointer`;
          cell.setAttribute('data-date', day.date);
          cell.setAttribute('data-count', day.count);
          cell.setAttribute('title', `${day.date}: ${day.count} PR${day.count !== 1 ? 's' : ''}`);
          
          // Add click handler to show PR details
          if (day.count > 0) {
            cell.addEventListener('click', () => {
              alert(`${day.date}: ${day.count} PR(s)\n\n${day.prs?.map(pr => `• ${pr.title} (${pr.repository})`).join('\n') || ''}`);
            });
          }
          
          grid.appendChild(cell);
        });
      }
      
      // Populate top repositories
      const reposList = document.getElementById('top-repos-list');
      if (reposList && data.topRepositories?.length > 0) {
        reposList.innerHTML = data.topRepositories.map(repo => `
          <div class="flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-800 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-750 transition">
            <div class="flex items-center space-x-3">
              <svg class="w-5 h-5 text-gray-600 dark:text-gray-400" fill="currentColor" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
              </svg>
              <div>
                <a href="https://github.com/${repo.full_name}" target="_blank" class="font-medium text-gray-900 dark:text-white hover:text-green-600 dark:hover:text-green-400">
                  ${repo.name}
                </a>
                <div class="flex items-center space-x-2 text-xs text-gray-500 dark:text-gray-400">
                  ${repo.language ? `<span class="flex items-center"><span class="w-2 h-2 rounded-full bg-yellow-400 mr-1"></span>${repo.language}</span>` : ''}
                </div>
              </div>
            </div>
            <div class="flex items-center space-x-1 text-sm text-gray-600 dark:text-gray-400">
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 16 16">
                <path d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25z"></path>
              </svg>
              <span>${repo.stars}</span>
            </div>
          </div>
        `).join('');
      } else if (reposList) {
        reposList.innerHTML = '<p class="text-gray-500 dark:text-gray-400 text-sm">No public repositories yet</p>';
      }
      
    } catch (error) {
      console.error('Error loading contributions:', error);
      loadingState?.classList.add('hidden');
      errorState?.classList.remove('hidden');
      const errorMessage = document.getElementById('error-message');
      if (errorMessage) {
        errorMessage.textContent = error.message || 'Failed to load contribution data';
      }
    }
  }

  // Load contributions on page load
  if (username) {
    loadContributions();
  } else {
    const loadingState = document.getElementById('loading-state');
    const errorState = document.getElementById('error-state');
    loadingState?.classList.add('hidden');
    errorState?.classList.remove('hidden');
    const errorMessage = document.getElementById('error-message');
    if (errorMessage) {
      errorMessage.textContent = 'Please login with GitHub to see your contributions';
    }
  }
</script>

<style>
  #contribution-grid {
    grid-auto-columns: 12px;
  }
  
  @media (max-width: 640px) {
    #contribution-grid {
      grid-auto-columns: 10px;
    }
  }

  /* Skeleton shimmer animation */
  @keyframes shimmer {
    0% {
      background-position: -1000px 0;
    }
    100% {
      background-position: 1000px 0;
    }
  }

  .skeleton-shimmer {
    animation: shimmer 2s infinite linear;
    background: linear-gradient(
      90deg,
      rgba(209, 213, 219, 0.4) 0%,
      rgba(229, 231, 235, 0.8) 50%,
      rgba(209, 213, 219, 0.4) 100%
    );
    background-size: 1000px 100%;
  }

  :global(.dark) .skeleton-shimmer {
    background: linear-gradient(
      90deg,
      rgba(55, 65, 81, 0.4) 0%,
      rgba(75, 85, 99, 0.6) 50%,
      rgba(55, 65, 81, 0.4) 100%
    );
    background-size: 1000px 100%;
  }
</style>